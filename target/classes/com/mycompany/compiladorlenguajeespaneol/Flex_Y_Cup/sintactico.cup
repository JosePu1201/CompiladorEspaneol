package com.mycompany.compiladorlenguajeespaneol.Flex_Y_Cup;
import java_cup.runtime.*;
import com.mycompany.compiladorlenguajeespaneol.Logica.*;
import java.util.*;
parser code {:
        ArrayList<Variables> vars = new ArrayList<>();
        ArrayList  <String> salidas = new ArrayList<>();
        public ArrayList<ErrorSalida> erroSalida = new ArrayList<>();
        private ArrayList<MetFun> metodosYFunciones = new ArrayList<>();
        private ArrayList<Variables> parTemp = new ArrayList<>();
        boolean banderaInt = false;
        boolean banderaFloat = false;
        boolean banderaString = false;
        boolean banderaError = false;

        public  boolean getError(){
            return banderaError;
        }
        public void imprimir(){
                for (String salida : salidas) {
                        System.out.println(salida);
                }
        }
public boolean validaFun(String nombre){
    boolean bandera = false;
    for(MetFun s: metodosYFunciones){
        if(s.getNombre().equals(nombre)){
            bandera = true;
            break;
        }
    }
    return bandera;
}
public boolean existeVar(String var,ArrayList <Variables> vars1) {
        boolean bandera = false;
        for (Variables var1 : vars1) {
            if (var.equals(var1.getNombre())) {
                bandera = true;
                break;
            }
        }
        return bandera;
    }
public boolean valTipo(String id,String tipo){
        boolean band = false;
        for(Variables var: vars){
            if(var.getNombre().equals(id)){
                if(var.getTipo().equals("flotante")){
                     if(tipo.equals("Entero")){
                    band = true;
                    break;
                }
                }
                else{
                    
                     if(var.getTipo().equals(tipo)){
                    band = true;
                    break;
                }
               
            }

        }
        

    }
    return band;
    }

    public boolean mismoTipo(String var1, String dato) {
        boolean si = false;
        for (Variables var : vars) {
            if (var.getNombre().equals(var1)) {
                switch (var.getTipo()) {
                    case "String":
                            try {
                        String algo = dato.toString();
                        si = true;
                    } catch (Exception e) {
                    }
                    break;
                    case "int":
                                                        try {
                        int algo = Integer.parseInt(dato);
                        si = true;
                    } catch (Exception e) {
                    }
                    break;
                    case "float":
                                                            try {
                        float algo = Float.parseFloat(dato);
                        si = true;
                    } catch (Exception e) {
                    }
                    break;
                    default:
                        throw new AssertionError();
                }
            }

        }
        return si;
    }
        public String type(String entrada) {
        String salida = "Object";
        switch (entrada) {
            case "Texto":
                salida = "String";
                break;
            case "Entero":
                salida = "int";
                break;
            case "flotante":
                salida = "double";
                break;

            default:
                break;
        }
        return salida;
    }
    public ArrayList<String> getSalidas() {
        return salidas;
    }

    public void setSalidas(ArrayList<String> salidas) {
        this.salidas = salidas;
    }
        public String crearFor(String priemro,String segundo){
        String salida = "";
        try {
            int uno = Integer.parseInt(priemro);
            int dos = Integer.parseInt(segundo);
            if(uno != dos){
                if(uno < dos){
                    salida = "for(int i = "+uno+"; "+"i"+"<"+dos+"; i++){\n";
                }
                else{
                    salida = "for(int i = "+uno+"; "+"i"+">"+dos+"; i--){\n";
                }
            }
        } catch (Exception e) {
        }
        System.out.println(salida);
        return salida;
    }

:};


terminal ESCRIBIR,LEER,ENTERO,FLOTANTE,STRING,PARENTESISABIERTO,PARENTESISCERRADO,DOSPUNTOS,COMA,MULTIPLICAR,MENOS,DIAGONAL,POTENCIA,MAS;
terminal NUMERO,DECIMAL,ID,COMILLASTEXTO,PUNTOYCOMA,COMILLAS,SI,SINO,PARA,MAYOR,MENOR,IGUAL,IGUALDOBLE,MAYORIGUAL,MENORIGUAL,FINSI,FINPARA;
terminal FINCASO, PARAR, CASO, CAMBIO,FINMIENTRAS,MIENTRAS,LLAVEC,LLAVEA,PROS,FUN,MAIN,RETORNO;

non terminal inicio, op,declaracion,declaracionigual,tipo,escribir,condicion,numero,si,resultado,sino,sinosi,for,ciclo,ope,operacion,asig;
non terminal asig1,asig2,lect,casos,cambio,tipoEntrada,Mientras,ops,main,proseso,argumentos,funcion,retorno,eleccion,tipoFP,todo,llamaPros;
non terminal parametros;

inicio  ::= todo:a {:salidas.add(a.toString());:}
        |
        ;


todo    ::= eleccion:a main:b  {:RESULT = b.toString()+"\n"+a.toString();:}
        |   main:a {:RESULT = a.toString();:}
        ;

eleccion    ::= eleccion:a tipoFP:b {:RESULT = a.toString()+"\n"+b.toString();:}
            |   tipoFP:a {:RESULT = a.toString()+"\n"; :}
            ;
tipoFP    ::= funcion:a {:RESULT = a.toString();:}
        |   proseso:a {:RESULT = a.toString();:}
        ;
ciclo   ::=    ciclo:a op:b  {:   RESULT = a.toString()+"\n"+b.toString();/*if(b.toString() != ""){
                                salidas.add(b.toString());}*/:}
        |       op:b    {:RESULT = b.toString()+"\n";/*if(b.toString() != ""){
                                salidas.add(b.toString());}*/:}
        
        ;


op  ::= declaracion:a {:RESULT = a;:}
    |   escribir:a {:RESULT = a;:}
    |   si:a {:RESULT = a;:}
    |   sinosi:a {:RESULT = a;:}
    |   for:a {:RESULT = a;:}
    |   asig:a {:RESULT = a;:}
    |   lect:a {:RESULT = a;:}
    |   cambio:a {:RESULT = a;:}
    |   Mientras:a {:RESULT =a;:}
    |   llamaPros:a {:RESULT = a;:}
    ;
/*                      Llamar proceso
---------------------------------------------------------------------*/

llamaPros   ::= PROS ID:a PARENTESISABIERTO parametros:b PARENTESISCERRADO PUNTOYCOMA {:RESULT = a.toString()+" ("+b.toString()+");";:}
            ;
parametros  ::= parametros:a COMA ID:b  {:if(existeVar(b.toString(),vars)){
                                            RESULT = a.toString()+","+b.toString();
                                        }else{
                                            RESULT = "";
                                            banderaError = true;
                                        }:}
            |   ID:a    {:if(existeVar(a.toString(),vars)){
                            RESULT = a.toString();
                        }else{
                            RESULT = "";
                            banderaError = true;
                        }:}
            ;
/*                      Condiciones
---------------------------------------------------------------------*/
condicion       ::=     MAYOR:a {:RESULT = a;:}
                |       MENOR:a  {:RESULT = a;:}
                |       IGUAL:a IGUAL {:RESULT = "==";:}
                |       MAYOR IGUAL:a {:RESULT = ">=";:}
                |       MENOR IGUAL:a  {:RESULT = "<=";:}
                ;
numero  ::=     NUMERO:a {:RESULT = a;:}
        |       DECIMAL:a {:RESULT = a;:}
        ;

resultado       ::=     numero:a condicion:b numero:c {:RESULT = a.toString()+b.toString()+c.toString();:}
                |       ID:a condicion:b numero:c     {:    if(existeVar(a.toString(),vars)){
                                                                RESULT = a.toString()+b.toString()+c.toString();}
                                                            else{
                                                                RESULT = "";
                                                                banderaError = true;
                                                            }:}
                |       numero:a condicion:b ID:c    {:    if(existeVar(c.toString(),vars)){
                                                                RESULT = a.toString()+b.toString()+c.toString();}
                                                            else{
                                                                RESULT = "";
                                                                banderaError = true;
                                                            }:}
                |       ID:a condicion:b ID:c         {:    if(existeVar(a.toString(),vars) && existeVar(c.toString(),vars)){
                                                                RESULT = a.toString()+b.toString()+c.toString();}
                                                            else{
                                                                RESULT = "";
                                                                banderaError = true;
                                                            }:}
                ;
/*                      If
--------------------------------------------------------------------*/

si      ::=     SI PARENTESISABIERTO resultado:a PARENTESISCERRADO LLAVEA ciclo:b LLAVEC{:RESULT = "if ("+a.toString()+"){\n"+b.toString()+"\n}";:}
        ;
/*                      else
--------------------------------------------------------------------*/
sino    ::= SINO LLAVEA ciclo:a LLAVEC{:RESULT = "else {\n"+a.toString()+"\n}";:}
        ;
/*                      elseif
---------------------------------------------------------------------*/
sinosi  ::= si:a sino:b {:RESULT = a.toString()+b.toString();:}
        ;
/*                      Delaraciones
--------------------------------------------------------------------*/
declaracion ::= tipo:a ID:b PUNTOYCOMA {:       
                                                if(existeVar(b.toString(),vars)){
                                                        banderaError = true;
                                                        RESULT = "";
                                                }
                                                else{
                                                vars.add(new Variables(b.toString(),a.toString()));
                                                RESULT = a.toString()+" "+b.toString()+";";}:}
; 

tipo    ::= ENTERO:a  {:RESULT = type(a.toString());:}
        |   FLOTANTE:a    {:RESULT = type(a.toString());:}
        |   STRING:a      {:RESULT = type(a.toString());:}
        ;
/*                      Escribir
---------------------------------------------------------------------*/
escribir    ::= ESCRIBIR PARENTESISABIERTO COMILLAS ID:a COMILLAS PARENTESISCERRADO PUNTOYCOMA{:RESULT = "System.out.println("+"\""+a.toString()+"\""+");";:}
            |   ESCRIBIR PARENTESISABIERTO  ID:a  PARENTESISCERRADO PUNTOYCOMA{:    if(existeVar(a.toString(),vars)){
                                                                                        RESULT = "System.out.println("+a.toString()+");";
                                                                                    }else{
                                                                                        RESULT = "";
                                                                                        banderaError = true;
                                                                                    }:}
            ;
/*                      For
----------------------------------------------------------------------*/
for     ::=     PARA PARENTESISABIERTO NUMERO:num1 COMA NUMERO:num2 PARENTESISCERRADO LLAVEA ciclo:a LLAVEC {:RESULT = crearFor(num1.toString(),num2.toString())+a.toString()+"\n}";:}
        ;
/*                      Asignacio
-----------------------------------------------------------------------*/
asig1   ::= tipo:a ID:b IGUAL{:if(existeVar(b.toString(),vars)){
                                                        banderaError = true;
                                                        RESULT = "";
                                                }
                                                else{
                                                vars.add(new Variables(b.toString(),a.toString()));
                                                RESULT = a.toString()+" "+b.toString()+"";}:}
        ;
asig2   ::=     ID:a IGUAL {:RESULT = a.toString();:}
        ;
asig    ::=     asig2:a COMILLAS ID:b COMILLAS PUNTOYCOMA {:    if(existeVar(a.toString(),vars)){
                                                                    RESULT = a.toString()+" = "+"\""+b.toString()+"\""+";\n";}
                                                                else{
                                                                    RESULT = "";
                                                                    banderaError = true;
                                                                    erroSalida.add(new ErrorSalida(bleft,bright,"La variable: "+a.toString()+" no existe"));
                                                                }:}
        |       asig2:a numero:b PUNTOYCOMA {:RESULT = a.toString()+" = "+b.toString()+";\n"; :}
        |       asig2:a operacion:b PUNTOYCOMA {:RESULT = a.toString()+" = "+b.toString()+";\n";:}                                        
        |       asig1:a numero:b PUNTOYCOMA {:RESULT = a.toString()+" = "+b.toString()+";\n"; :}
        |       asig1:a operacion:b PUNTOYCOMA {:RESULT = a.toString()+" = "+b.toString()+";\n"; :}
        |       asig1:a ID:b PUNTOYCOMA {:RESULT = a.toString()+" = "+b.toString()+";\n"; :}
        ;
        //|       asig2:a operacion:b{:RESULT = a.toString()+" = "+b.toString()+"\n"; :}
        

/*                      Operaciones
------------------------------------------------------------------------*/
ope     ::=     MAS:a     {:RESULT = a.toString();:}
        |       MENOS:a    {:RESULT = a.toString();:}
        |       MULTIPLICAR:a     {:RESULT = a.toString();:}
        |       DIAGONAL:a    {:RESULT = a.toString();:}
        ;

operacion       ::=     numero:a ope:b numero:c {:RESULT = a.toString()+b.toString()+c.toString();:}
                |       ID:a ope:b numero:c {:  if(existeVar(a.toString(),vars)){
                                                    RESULT = a.toString()+b.toString()+c.toString();
                                                }else{
                                                    banderaError = true;
                                                    erroSalida.add(new ErrorSalida(aleft,aright,"La variable: "+a.toString()+" no existe"));
                                                    RESULT = "";
                                                }:}
                |       numero:a ope:b ID:c {:  if(existeVar(c.toString(),vars)){
                                                    RESULT = a.toString()+b.toString()+c.toString();
                                                }else{
                                                    banderaError = true;
                                                    erroSalida.add(new ErrorSalida(cleft,cright,"La variable: "+c.toString()+" no existe"));
                                                    RESULT = "";
                                                }:}
                |       ID:a ope:b ID:c {:  if(existeVar(a.toString(),vars) && existeVar(c.toString(),vars)){
                                                RESULT = a.toString()+b.toString()+c.toString();
                                            }else{
                                                banderaError = true;
                                                erroSalida.add(new ErrorSalida(cleft,cright,"Alguna de las variables no existe"));
                                                RESULT = "";
                                            }:}
                ;
/*                      Leer
----------------------------------------------------------------------------*/
lect    ::=     LEER PARENTESISABIERTO ID:a PARENTESISCERRADO PUNTOYCOMA {: if(existeVar(a.toString(),vars)){
                                                                                RESULT = a.toString()+"="+"JOptionPane.showInputDialog(\"Ingresa el dato\");";
                                                                            }else{
                                                                                banderaError = true;
                                                                                RESULT = "";
                                                                            } :}
        ;
/*                      Caso
----------------------------------------------------------------------------*/
cambio  ::= CAMBIO PARENTESISABIERTO ID:a PARENTESISCERRADO LLAVEA casos:b LLAVEC {:if(existeVar(a.toString(),vars)){
                                                                                RESULT = "switch ("+a.toString()+"){\n"+b.toString()+"\n}"; System.out.println(b.toString());
                                                                            }else{
                                                                                banderaError =true;
                                                                                RESULT = "";
                                                                            }:}
        ;

casos   ::=     casos:a CASO tipoEntrada:b DOSPUNTOS ciclo:c PARAR {:RESULT = a.toString()+"\n case "+b.toString()+":\n"+c.toString()+"\nbreak;";:}
        |       CASO tipoEntrada:a DOSPUNTOS  ciclo:b PARAR {:RESULT = "case "+ a.toString()+":\n"+b.toString()+"\nbreak;\n";:}
        ;

tipoEntrada ::= COMILLAS ID:a COMILLAS {:RESULT = "\""+a.toString()+"\""; :}
            |   numero:a {:RESULT = a.toString();:}
            |   ID:a {:if(existeVar(a.toString(),vars)){
                RESULT = a.toString();
                }else{
                    banderaError = true;
                    RESULT = "";
                }:}
            ;

/*                      Mientras
-----------------------------------------------------------------------------*/
Mientras    ::= MIENTRAS PARENTESISABIERTO resultado:a PARENTESISCERRADO LLAVEA ciclo:b LLAVEC {:RESULT = "while ("+a.toString()+"){\n"+b.toString()+"\n}";:}
            ;
/*                      Metodo main
------------------------------------------------------------------------------*/

main    ::= MAIN LLAVEA ciclo:a LLAVEC {:RESULT = "public static void main (String args[]){\n"+a.toString()+"\n}";:}
        ;
/*                      argumentos
-------------------------------------------------------------------------------*/
argumentos  ::= argumentos:a COMA tipo:b ID:c {:RESULT = a.toString()+","+b.toString()+" "+c.toString();
                                                if(existeVar(c.toString(),parTemp)){
                                                    banderaError = true;
                                                    
                                                }
                                                else{
                                                    parTemp.add(new Variables(c.toString(),b.toString()));
                                                    vars.add(new Variables(c.toString(),b.toString()));
                                                }:}
            |   tipo:a ID:b {:  RESULT = a.toString()+" "+b.toString();
                                if(existeVar(b.toString(),parTemp)){
                                    banderaError = true;
                                    
                                }else{
                                    parTemp.add(new Variables(b.toString(),a.toString()));
                                    vars.add(new Variables(b.toString(),a.toString()));
                                }:}
                                                
            |   {:RESULT = "";:}
            ;
/*                      Procedimiento
------------------------------------------------------------------------------*/

proseso ::= PROS ID:a PARENTESISABIERTO argumentos:b PARENTESISCERRADO LLAVEA ciclo:c LLAVEC
            {:
            if(validaFun(a.toString())){
                banderaError  = true;
                RESULT = "";
            }
            else{
                RESULT = "public static void "+a.toString()+"("+b.toString()+"){\n"+c.toString()+"\n}";
                metodosYFunciones.add(new MetFun(false,a.toString())); 
            }
            vars.clear();
            parTemp.clear();:}
        ;

/*                      Funcion
------------------------------------------------------------------------------*/

funcion ::= FUN tipo:a ID:b PARENTESISABIERTO argumentos:c PARENTESISCERRADO LLAVEA ciclo:d RETORNO ID:e PUNTOYCOMA  LLAVEC 
{:RESULT = "public static "+a.toString()+" "+b.toString()+"("+c.toString()+"){\n"+d.toString()+"\nreturn "+e.toString()+";\n}";vars.clear();:}
        ;

retorno ::= RETORNO ID
        ;