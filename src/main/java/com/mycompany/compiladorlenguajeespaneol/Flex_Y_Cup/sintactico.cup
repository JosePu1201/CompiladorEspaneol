package com.mycompany.compiladorlenguajeespaneol.Flex_Y_Cup;
import java_cup.runtime.*;
import com.mycompany.compiladorlenguajeespaneol.Logica.Variables;
import java.util.*;
parser code {:
        ArrayList<Variables> vars = new ArrayList<>();
        ArrayList  <String> salidas = new ArrayList<>();
        boolean banderaInt = false;
        boolean banderaFloat = false;
        boolean banderaString = false;
        public void imprimir(){
                for (String salida : salidas) {
                        System.out.println(salida);
                }
        }
public boolean existeVar(String var) {
        boolean bandera = false;
        for (Variables var1 : vars) {
            if (var.equals(var1.getNombre())) {
                bandera = true;
                break;
            }
        }
        return bandera;
    }

    public boolean mismoTipo(String var1, String dato) {
        boolean si = false;
        for (Variables var : vars) {
            if (var.getNombre().equals(var1)) {
                switch (var.getTipo()) {
                    case "String":
                            try {
                        String algo = dato.toString();
                        si = true;
                    } catch (Exception e) {
                    }
                    break;
                    case "int":
                                                        try {
                        int algo = Integer.parseInt(dato);
                        si = true;
                    } catch (Exception e) {
                    }
                    break;
                    case "float":
                                                            try {
                        float algo = Float.parseFloat(dato);
                        si = true;
                    } catch (Exception e) {
                    }
                    break;
                    default:
                        throw new AssertionError();
                }
            }

        }
        return si;
    }
        public String type(String entrada) {
        String salida = "Object";
        switch (entrada) {
            case "Texto":
                salida = "String";
                break;
            case "Entero":
                salida = "int";
                break;
            case "flotante":
                salida = "double";
                break;

            default:
                break;
        }
        return salida;
    }
    public ArrayList<String> getSalidas() {
        return salidas;
    }

    public void setSalidas(ArrayList<String> salidas) {
        this.salidas = salidas;
    }
        public String crearFor(String priemro,String segundo){
        String salida = "";
        try {
            int uno = Integer.parseInt(priemro);
            int dos = Integer.parseInt(segundo);
            if(uno != dos){
                if(uno < dos){
                    salida = "for(int i = "+uno+"; "+"i"+"<"+dos+"; i++){\n";
                }
                else{
                    salida = "for(int i = "+uno+"; "+"i"+">"+dos+"; i--){\n";
                }
            }
        } catch (Exception e) {
        }
        System.out.println(salida);
        return salida;
    }

:};


terminal ESCRIBIR,LEER,ENTERO,FLOTANTE,STRING,PARENTESISABIERTO,PARENTESISCERRADO,DOSPUNTOS,COMA,MULTIPLICAR,MENOS,DIAGONAL,POTENCIA,MAS;
terminal NUMERO,DECIMAL,ID,COMILLASTEXTO,PUNTOYCOMA,COMILLAS,SI,SINO,PARA,MAYOR,MENOR,IGUAL,IGUALDOBLE,MAYORIGUAL,MENORIGUAL,FINSI,FINPARA;
terminal FINCASO, PARAR, CASO, CAMBIO,FINMIENTRAS,MIENTRAS;

non terminal inicio, op,declaracion,declaracionigual,tipo,escribir,condicion,numero,si,resultado,sino,sinosi,for,ciclo,ope,operacion,asig;
non terminal asig1,asig2,lect,casos,cambio,tipoEntrada,Mientras,ops;

inicio  ::= ciclo:a {:System.out.println(a.toString());:}
        |
        ;
        

ciclo   ::=    ciclo:a op:b  {:   RESULT = a+b;if(b.toString() != ""){
                                salidas.add(b.toString());}:}
        |       op:b    {:RESULT = b;if(b.toString() != ""){
                                salidas.add(b.toString());}:}
        
        ;

/*ops ::= declaracion:a {:RESULT = a;:}
    |   escribir:a {:RESULT = a;:}
    |   si:a {:RESULT = a;:}
    |   sinosi:a {:RESULT = a;:}
    |   for:a {:RESULT = a;:}
    |   asig:a {:RESULT = a;:}
    |   lect:a {:RESULT = a;:}
    |   cambio:a {:RESULT = a;:}
    |   Mientras:a {:RESULT =a;:}
    ;*/
op  ::= declaracion:a {:RESULT = a;:}
    |   escribir:a {:RESULT = a;:}
    |   si:a {:RESULT = a;:}
    |   sinosi:a {:RESULT = a;:}
    |   for:a {:RESULT = a;:}
    |   asig:a {:RESULT = a;:}
    |   lect:a {:RESULT = a;:}
    |   cambio:a {:RESULT = a;:}
    |   Mientras:a {:RESULT =a;:}
    ;

/*                      Condiciones
---------------------------------------------------------------------*/
condicion       ::=     MAYOR:a {:RESULT = a;:}
                |       MENOR:a  {:RESULT = a;:}
                |       IGUAL:a IGUAL {:RESULT = "==";:}
                |       MAYOR IGUAL:a {:RESULT = ">=";:}
                |       MENOR IGUAL:a  {:RESULT = "<=";:}
                ;
numero  ::=     NUMERO:a {:RESULT = a;:}
        |       DECIMAL:a {:RESULT = a;:}
        ;

resultado       ::=     numero:a condicion:b numero:c {:RESULT = a.toString()+b.toString()+c.toString();:}
                |       ID:a condicion:b numero:c     {:RESULT = a.toString()+b.toString()+c.toString();:}
                |       numero:a condicion:b ID:c     {:RESULT = a.toString()+b.toString()+c.toString();:}
                |       ID:a condicion:b ID:c         {:RESULT = a.toString()+b.toString()+c.toString();:}
                ;
/*                      If
--------------------------------------------------------------------*/

si      ::=     SI PARENTESISABIERTO resultado:a PARENTESISCERRADO ciclo:b FINSI{:RESULT = "if ("+a.toString()+"){\n"+b.toString()+"\n}";:}
        ;
/*                      else
--------------------------------------------------------------------*/
sino    ::= SINO op:a FINSI{:RESULT = "else {\n"+a.toString()+"\n}";:}
        ;
/*                      elseif
---------------------------------------------------------------------*/
sinosi  ::= si:a sino:b {:RESULT = a.toString()+b.toString();:}
        ;
/*                      Delaraciones
--------------------------------------------------------------------*/
declaracion ::= tipo:a ID:b PUNTOYCOMA {:       
                                                if(existeVar(b.toString())){
                                                        RESULT = "";
                                                }
                                                else{
                                                vars.add(new Variables(b.toString(),a.toString()));
                                                RESULT = a.toString()+" "+b.toString()+";";}:}
; 

tipo    ::= ENTERO:a  {:RESULT = type(a.toString());:}
        |   FLOTANTE:a    {:RESULT = type(a.toString());:}
        |   STRING:a      {:RESULT = type(a.toString());:}
        ;
/*                      Escribir
---------------------------------------------------------------------*/
escribir    ::= ESCRIBIR PARENTESISABIERTO COMILLAS ID:a COMILLAS PARENTESISCERRADO PUNTOYCOMA{:RESULT = "System.out.println("+"\""+a.toString()+"\""+");";:}
            |   ESCRIBIR PARENTESISABIERTO  ID:a  PARENTESISCERRADO PUNTOYCOMA{:RESULT = "System.out.println("+a.toString()+");";:}
            ;
/*                      For
----------------------------------------------------------------------*/
for     ::=     PARA PARENTESISABIERTO NUMERO:num1 COMA NUMERO:num2 PARENTESISCERRADO op:a FINPARA {:RESULT = crearFor(num1.toString(),num2.toString())+a.toString()+"\n}";:}
        ;
/*                      Asignacio
-----------------------------------------------------------------------*/
asig1   ::= tipo:a ID:b IGUAL{: vars.add(new Variables(b.toString(),a.toString()));
                                RESULT = a.toString()+" "+b.toString();:}
        ;
asig2   ::=     ID:a IGUAL {:RESULT = a.toString();:}
        ;
asig    ::=     asig2:a ID:b PUNTOYCOMA {:RESULT = a.toString()+" = "+b.toString()+";\n"; :}
        |       asig2:a numero:b PUNTOYCOMA {:RESULT = a.toString()+" = "+b.toString()+";\n"; :} 
        |       asig2:a operacion:b PUNTOYCOMA {:RESULT = a.toString()+" = "+b.toString()+";\n"; :}
        |       asig1:a numero:b PUNTOYCOMA {:RESULT = a.toString()+" = "+b.toString()+";\n"; :}
        |       asig1:a operacion:b PUNTOYCOMA {:RESULT = a.toString()+" = "+b.toString()+";\n"; :}
        |       asig1:a ID:b PUNTOYCOMA {:RESULT = a.toString()+" = "+b.toString()+";\n"; :}
        ;
        //|       asig2:a operacion:b{:RESULT = a.toString()+" = "+b.toString()+"\n"; :}
        

/*                      Operaciones
------------------------------------------------------------------------*/
ope     ::=     MAS:a     {:RESULT = a.toString();:}
        |       MENOS:a    {:RESULT = a.toString();:}
        |       MULTIPLICAR:a     {:RESULT = a.toString();:}
        |       DIAGONAL:a    {:RESULT = a.toString();:}
        ;

operacion       ::=     numero:a ope:b numero:c {:RESULT = a.toString()+b.toString()+c.toString();:}
                |       ID:a ope:b numero:c {:RESULT = a.toString()+b.toString()+c.toString();:}
                |       numero:a ope:b ID:c {:RESULT = a.toString()+b.toString()+c.toString();:}
                |       ID:a ope:b ID:c {:RESULT = a.toString()+b.toString()+c.toString();:}
                ;
/*                      Leer
----------------------------------------------------------------------------*/
lect    ::=     LEER PARENTESISABIERTO ID:a PARENTESISCERRADO PUNTOYCOMA {:RESULT = a.toString()+"="+"JOptionPane.showInputDialog(\"Ingresa el dato\");"; :}
        ;
/*                      Caso
----------------------------------------------------------------------------*/
cambio  ::= CAMBIO PARENTESISABIERTO ID:a PARENTESISCERRADO casos:b FINCASO {:RESULT = "switch ("+a.toString()+"){\n"+b.toString()+"\n}"; System.out.println(b.toString());:}
        ;

casos   ::=     casos:a CASO tipoEntrada:b DOSPUNTOS op:c PARAR {:RESULT = a.toString()+"\n case "+b.toString()+":\n"+c.toString()+"\nbreak;";:}
        |       CASO tipoEntrada:a DOSPUNTOS  op:b PARAR {:RESULT = "case "+ a.toString()+":\n"+b.toString()+"\nbreak;\n";:}
        ;

tipoEntrada ::= COMILLAS ID:a COMILLAS {:RESULT = a.toString();:}
            |   numero:a {:RESULT = a.toString();:}
            |   ID:a {:RESULT = a.toString();:}
            ;

/*                      Mientras
-----------------------------------------------------------------------------*/
Mientras    ::= MIENTRAS PARENTESISABIERTO resultado:a PARENTESISCERRADO op:b FINMIENTRAS {:RESULT = "while ("+a.toString()+"){\n"+b.toString()+"\n}";:}
            ;